local math_util = require "main.math_util"

local POS_SNAP = 50
local MAX_HEIGHT = 200

local size_min = 0.8
local size_max = 1.2
local size_snap = 0.1

local spawn_time_min = 0.5
local spawn_time_max = 4
local spawn_time_snap = 0.5

local function set_defaults(self)
    size_min = 0.8
    size_max = 1.2
    size_snap = 0.1

    spawn_time_min = 1.5
    spawn_time_max = 4
    spawn_time_snap = 0.5
end

function init(self)
    self.spawning = false
    self.elapsed_time = 0
    self.next_spawn = 1
    self.bungs = {}
end

function update(self, dt)
    if not self.spawning then
        return
    end
    self.elapsed_time = self.elapsed_time + dt

    size_min = math_util.lerp(0.8, 1.2, self.elapsed_time / 100)
    size_max = math_util.lerp(1.2, 1.5, self.elapsed_time / 100)
    spawn_time_min = math_util.lerp(1.5, 0.5, self.elapsed_time / 80)
    spawn_time_max = math_util.lerp(4, 3, self.elapsed_time / 80)

    if self.elapsed_time >= self.next_spawn then
        self.next_spawn = self.next_spawn + math_util.random_snap(spawn_time_min, spawn_time_max, spawn_time_snap)

        local spawn_pos = go.get_position() + vmath.vector3(0, math_util.random_snap(0, MAX_HEIGHT, POS_SNAP), 0)
        local id = factory.create("#bung_factory", spawn_pos)
        go.set_scale(math_util.random_snap(size_min, size_max, size_snap), id)
        table.insert(self.bungs, id)
    end
end

function on_message(self, message_id, message, sender)
    if message_id == hash("damage") then
        for _, id in ipairs(self.bungs) do
            if go.exists(id) then
                msg.post(id, "damage", message)
            end
        end
        self.spawning = false
    elseif message_id == hash("start") then
        self.spawning = true
        self.elapsed_time = 0
        self.next_spawn = 1
        for i = #self.bungs, 1, -1 do
            local id = self.bungs[i]
            if id and go.exists(id) then
                go.delete(id)
            end
            self.bungs[i] = nil
        end
        set_defaults(self)

        self.spawning = true
        self.elapsed_time = 0
        self.next_spawn = 1
    elseif message_id == hash("win") then
        self.spawning = false
    end
end
