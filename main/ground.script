local math_util = require "main.math_util"

local ground_pieces = { "ground0", "ground1", "ground2", "ground3",
	"ground4", "ground5", "ground6", "ground7", "ground8", "ground9" }
local ground_piece_size_x = 158

function init(self)
	self.moving = false
	self.speed = 260
	self.move_princess = false
	self.speeding_up = true
	self.accumulated_time = 0
end

function update(self, dt)
	if not self.moving then
		return
	end
	
	self.accumulated_time = self.accumulated_time + dt

	if self.speeding_up then
		self.speed = math_util.lerp(260, 660, self.accumulated_time / 10)
	end

	local offset_amount = -self.speed * dt
	for i, p in ipairs(ground_pieces) do
		local pos = go.get_position(p)
		if pos.x <= -ground_piece_size_x * 1.5 then
			pos.x = pos.x + (#ground_pieces - 1) * ground_piece_size_x
		end
		pos.x = pos.x + offset_amount
		go.set_position(pos, p)
	end

	if self.move_princess then
		go.set_position(go.get_position("princess_bungessa") + vmath.vector3(offset_amount, 0, 0), "princess_bungessa")
		go.set_position(go.get_position("cage") + vmath.vector3(offset_amount, 0, 0), "cage")
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("win") then
		self.speeding_up = false
		timer.delay(5, false, function()
			if self.moving then
				timer.delay(2, false, function()
					self.moving = false
					timer.delay(3, false, function()
						go.animate("cage#sprite", "tint", go.PLAYBACK_ONCE_FORWARD, vmath.vector4(0, 0, 0, 0), go.EASING_OUTSINE, 2)
					end)
				end)
				self.move_princess = true
			end
		end)
	elseif message_id == hash("damage") then
		self.moving = false
	elseif message_id == hash("start") then
		self.moving = true
		self.speeding_up = true
		self.accumulated_time = 0
	end
end
